-- resets the list to this array
setACL("::/0")
addACL("0.0.0.0/0")

-- Listen to
setLocal("0.0.0.0")

-- Import  LuaJIT - FFI Library
local ffi = require("ffi")

-- Declare inet_pton
ffi.cdef[[
  int inet_pton(int af, const char *src, void *dst);
]]

-- Family IPv4
local AF_INET = 2
local inet = ffi.new("unsigned int [1]")

function luarule(dq)

  -- replace dash with dot
  ip = string.gsub(dq.qname:toString(), "-", ".")
  -- get only digits
  ip = string.match(ip, "%d+%.%d+%.%d+%.%d+")

  -- if not matched, print whatismyip
  if ip == nil then
    return DNSAction.Spoof, dq.remoteaddr:tostring()
  end

  -- Validate IPv4
  if ffi.C.inet_pton(AF_INET, ip , inet) == 1 then
    return DNSAction.Spoof, ip
  else
    return DNSAction.Spoof, dq.remoteaddr:tostring()
  end

end

addAction(AllRule(), LuaAction(luarule))
